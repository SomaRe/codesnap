# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Multi-Platform Build

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - name: windows-amd64
            os: windows
            arch: amd64
            extension: .exe
          - name: linux-amd64
            os: linux
            arch: amd64
            extension: ""
          - name: android-arm64
            os: android
            arch: arm64
            extension: ""
          - name: macos-arm64
            os: darwin
            arch: arm64
            extension: ""

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    
    - name: Build
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        mkdir -p dist
        go build -v -o dist/codesnap-${{ matrix.name }}${{ matrix.extension }} main.go
    
    - name: Test
      run: go test -v ./...
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: codesnap-${{ matrix.name }}
        path: dist/codesnap-${{ matrix.name }}${{ matrix.extension }}
        if-no-files-found: error

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: false
        prerelease: false
